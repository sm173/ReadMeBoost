trigger:
  branches:
    include:
      - main

variables:
  pythonVersion: '3.10'
  backendFolder: 'backend'
  frontendFolder: 'frontend'

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'

    - script: |
        cd $(backendFolder)
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install backend dependencies'

    - script: |
        cd $(frontendFolder)
        npm install
        npm run build
        mkdir -p ../backend/static
        cp -r build/* ../backend/static/
      displayName: 'Build frontend and copy to backend/static'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(backendFolder)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'

    - publish: '$(Build.ArtifactStagingDirectory)/app.zip'
      artifact: drop

- stage: Deploy
  jobs:
  - deployment: DeployWeb
    environment: 'production'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'cb6255875a-vibecode07-az'
              appType: 'webAppLinux'
              appName: 'CTS-VibeAppce7713-1'
              package: '$(Pipeline.Workspace)/drop/app.zip'
